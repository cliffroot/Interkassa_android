//
// DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED USING AndroidAnnotations 3.0.1.
//


package com.interkassa;

import java.util.ArrayList;
import android.content.Context;
import com.interkassa.Interkassa.ResultListener;
import com.interkassa.models.HTMLWithBaseUrl;
import com.interkassa.models.PaymentInfo;
import com.interkassa.models.PaymentMethod;
import org.androidannotations.api.BackgroundExecutor;

public final class Interkassa_
    extends Interkassa
{

    private Context context_;

    private Interkassa_(Context context) {
        context_ = context;
        init_();
    }

    public static Interkassa_ getInstance_(Context context) {
        return new Interkassa_(context);
    }

    private void init_() {
    }

    public void rebind(Context context) {
        context_ = context;
        init_();
    }

    @Override
    public void getPayingForm(final Integer currency, final Double amount, final String paymentSystemAlias, final ResultListener<HTMLWithBaseUrl> resultListener) {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @Override
            public void execute() {
                try {
                    Interkassa_.super.getPayingForm(currency, amount, paymentSystemAlias, resultListener);
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    @Override
    public void getPaymentInfo(final Integer currency, final Double amount, final String paymentSystemAlias, final ResultListener<PaymentInfo> resultListener) {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @Override
            public void execute() {
                try {
                    Interkassa_.super.getPaymentInfo(currency, amount, paymentSystemAlias, resultListener);
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

    @Override
    public void getPayingMethods(final Integer currency, final Double amount, final ResultListener<ArrayList<PaymentMethod>> resultListener) {
        BackgroundExecutor.execute(new BackgroundExecutor.Task("", 0, "") {


            @Override
            public void execute() {
                try {
                    Interkassa_.super.getPayingMethods(currency, amount, resultListener);
                } catch (Throwable e) {
                    Thread.getDefaultUncaughtExceptionHandler().uncaughtException(Thread.currentThread(), e);
                }
            }

        }
        );
    }

}
